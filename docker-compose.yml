version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: iot-backend
    restart: unless-stopped
    environment:
      - PORT=5000
      - DATABASE_PATH=/app/data/temperature.db
      - DEBUG=False
      - FLASK_ENV=production
    volumes:
      - iot_data:/app/data
      - iot_logs:/app/logs
    ports:
      - "5000:5000"
    networks:
      - iot-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/api/latest', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
      - /var/tmp

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: iot-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - iot-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp
      - /var/cache/nginx
      - /var/log/nginx

volumes:
  iot_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  iot_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs

networks:
  iot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 